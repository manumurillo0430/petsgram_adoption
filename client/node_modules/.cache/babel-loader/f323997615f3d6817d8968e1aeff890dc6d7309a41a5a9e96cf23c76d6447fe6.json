{"ast":null,"code":"var _jsxFileName = \"/Users/manumurillo/Downloads/petsgram_adoption/client/src/components/registration/LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport * as yup from 'yup';\nimport FormSubmitButtom from '../form/FormSubmitButtom';\nimport FormInputField from '../form/FormInputField';\nimport FormPasswordField from '../form/FormPasswordField';\nimport { requiredField, userNameTooShort, passwordTooShort } from '../../utils/globals';\nimport { Formik } from 'formik';\nimport { PostReq } from '../../utils/api';\nimport { useState } from 'react';\nimport { useAuthContext } from '../../context/AuthContext';\nimport { Text } from '@chakra-ui/react';\nimport { useSearchContext } from '../../context/SearchContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm(_ref) {\n  _s();\n  let {\n    toggleModal\n  } = _ref;\n  console.log(toggleModal);\n  const {\n    getCurrentUser\n  } = useAuthContext();\n  const {\n    getUserLikes\n  } = useSearchContext;\n  const [serverError, setServerError] = useState(false);\n  const loginSchema = yup.object().shape({\n    email: yup.string().required(requiredField).min(6, userNameTooShort),\n    password: yup.string().required(requiredField).min(6, passwordTooShort)\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: loginSchema,\n    validateOnChange: false,\n    onSubmit: async user => {\n      try {\n        setServerError('');\n        const res = await PostReq('/user/login/', user);\n        console.log(res.token, 'userid:', res.user_id, res.user_likes);\n        if (res) {\n          toggleModal();\n          await getCurrentUser(res.user_id);\n          await getUserLikes(res.user_likes);\n        }\n      } catch (error) {\n        if (error.response && error.response.data && error.response.data.error) {\n          setServerError(error.response.data.error);\n        } else {\n          setServerError('An error occurred. Please try again later.');\n        }\n      }\n    },\n    children: _ref2 => {\n      let {\n        handleSubmit\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInputField, {\n          req: true,\n          fieldName: \"email\",\n          fieldLabel: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormPasswordField, {\n          req: true,\n          fieldName: \"password\",\n          fieldLabel: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormSubmitButtom, {\n          buttonLabel: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), serverError ? /*#__PURE__*/_jsxDEV(Text, {\n          children: serverError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 36\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginForm, \"tU3AAM60KxhYoH/ooXg9UXNxzCY=\", false, function () {\n  return [useAuthContext];\n});\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","yup","FormSubmitButtom","FormInputField","FormPasswordField","requiredField","userNameTooShort","passwordTooShort","Formik","PostReq","useState","useAuthContext","Text","useSearchContext","jsxDEV","_jsxDEV","LoginForm","_ref","_s","toggleModal","console","log","getCurrentUser","getUserLikes","serverError","setServerError","loginSchema","object","shape","email","string","required","min","password","initialValues","validationSchema","validateOnChange","onSubmit","user","res","token","user_id","user_likes","error","response","data","children","_ref2","handleSubmit","req","fieldName","fieldLabel","fileName","_jsxFileName","lineNumber","columnNumber","buttonLabel","_c","$RefreshReg$"],"sources":["/Users/manumurillo/Downloads/petsgram_adoption/client/src/components/registration/LoginForm.jsx"],"sourcesContent":["import React from 'react'\nimport * as yup from 'yup'\nimport FormSubmitButtom from '../form/FormSubmitButtom'\nimport FormInputField from '../form/FormInputField'\nimport FormPasswordField from '../form/FormPasswordField'\nimport { requiredField, userNameTooShort, passwordTooShort } from '../../utils/globals'\nimport { Formik } from 'formik'\nimport { PostReq } from '../../utils/api'\nimport { useState } from 'react'\nimport { useAuthContext } from '../../context/AuthContext'\nimport { Text } from '@chakra-ui/react'\nimport { useSearchContext } from '../../context/SearchContext'\n\nexport default function LoginForm({ toggleModal }) {\n    console.log(toggleModal)\n    const { getCurrentUser } = useAuthContext()\n    const { getUserLikes } = useSearchContext\n    const [serverError, setServerError] = useState(false)\n    const loginSchema = yup.object().shape({\n        email: yup.string().required(requiredField).min(6, userNameTooShort),\n        password: yup.string().required(requiredField).min(6, passwordTooShort),\n    })\n\n    return (\n        <Formik\n            initialValues={{\n                email: '',\n                password: '',\n            }}\n            validationSchema={loginSchema}\n            validateOnChange={false}\n            onSubmit={async (user) => {\n                try {\n                    setServerError('')\n                    const res = await PostReq('/user/login/', user)\n                    console.log(res.token, 'userid:', res.user_id, res.user_likes)\n                    if (res) {\n                        toggleModal()\n                        await getCurrentUser(res.user_id)\n                        await getUserLikes(res.user_likes)\n                    }\n                } catch (error) {\n                    if (error.response && error.response.data && error.response.data.error) {\n                        setServerError(error.response.data.error)\n                    } else {\n                        setServerError('An error occurred. Please try again later.')\n                    }\n                }\n            }}\n        >\n            {({ handleSubmit }) => (\n                <form onSubmit={handleSubmit}>\n                    <FormInputField req={true} fieldName=\"email\" fieldLabel=\"Email\" />\n                    <FormPasswordField req={true} fieldName=\"password\" fieldLabel=\"Password\" />\n                    <FormSubmitButtom buttonLabel=\"Log In\" />\n                    {serverError ? <Text>{serverError}</Text> : ''}\n                </form>\n            )}\n        </Formik>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}