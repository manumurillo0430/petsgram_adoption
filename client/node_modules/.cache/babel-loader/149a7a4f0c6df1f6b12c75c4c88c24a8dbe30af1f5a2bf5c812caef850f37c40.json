{"ast":null,"code":"var _jsxFileName = \"/Users/manumurillo/Downloads/petsgram_adoption/client/src/components/Admin/DashboardTable.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Table, Thead, Tbody, Tr, Th, Td, Flex, Avatar } from '@chakra-ui/react';\nimport { TriangleDownIcon, TriangleUpIcon } from '@chakra-ui/icons';\nimport { useTable, useSortBy } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DashboardTable(_ref) {\n  _s();\n  let {\n    columns,\n    data\n  } = _ref;\n  const caseInsensitiveSort = (row1, row2) => {\n    let r1 = row1 ? row1.toLowerCase() : '';\n    let r2 = row2 ? row2.toLowerCase() : '';\n    if (r1 < r2) return -1;\n    if (r1 > r2) return 1;\n    return 0;\n  };\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      sortBy: [{\n        id: 'name',\n        desc: false\n      }]\n    },\n    sortTypes: {\n      alphanumeric: (row1, row2, name) => {\n        if (name === 'picture') {\n          return 0;\n        } else {\n          return caseInsensitiveSort(row1.values[name], row2.values[name]);\n        }\n      }\n    },\n    disableSortRemove: true\n  }, useSortBy);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    size: \"md\",\n    variant: \"simple\",\n    colorScheme: \"blackAlpha\",\n    fontSize: \"1rem\",\n    mt: 8,\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(Thead, {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(Tr, {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(Th, {\n          ...column.getHeaderProps(column.getSortByToggleProps({\n            title: `Sort by ${column.Header}`\n          })),\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            align: \"center\",\n            wrap: \"nowrap\",\n            gap: 2,\n            w: \"6rem\",\n            children: [column.render('Header'), column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(TriangleDownIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(TriangleUpIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 45\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n      ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(Tr, {\n          ...row.getRowProps(),\n          children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(Td, {\n            ...cell.getCellProps(),\n            children: cell.render('Cell')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(DashboardTable, \"T5U6FpG7qNL2+V8iGF3ne+5qi0g=\", false, function () {\n  return [useTable];\n});\n_c = DashboardTable;\nvar _c;\n$RefreshReg$(_c, \"DashboardTable\");","map":{"version":3,"names":["React","Table","Thead","Tbody","Tr","Th","Td","Flex","Avatar","TriangleDownIcon","TriangleUpIcon","useTable","useSortBy","jsxDEV","_jsxDEV","DashboardTable","_ref","_s","columns","data","caseInsensitiveSort","row1","row2","r1","toLowerCase","r2","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","initialState","sortBy","id","desc","sortTypes","alphanumeric","name","values","disableSortRemove","size","variant","colorScheme","fontSize","mt","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","title","Header","align","wrap","gap","w","render","isSorted","isSortedDesc","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/Users/manumurillo/Downloads/petsgram_adoption/client/src/components/Admin/DashboardTable.jsx"],"sourcesContent":["import React from 'react'\nimport { Table, Thead, Tbody, Tr, Th, Td, Flex, Avatar } from '@chakra-ui/react'\nimport { TriangleDownIcon, TriangleUpIcon } from '@chakra-ui/icons'\nimport { useTable, useSortBy } from 'react-table'\n\nexport default function DashboardTable({ columns, data }) {\n    const caseInsensitiveSort = (row1, row2) => {\n        let r1 = row1 ? row1.toLowerCase() : ''\n        let r2 = row2 ? row2.toLowerCase() : ''\n\n        if (r1 < r2) return -1\n        if (r1 > r2) return 1\n        return 0\n    }\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable(\n        {\n            columns,\n            data,\n            initialState: { sortBy: [{ id: 'name', desc: false }] },\n            sortTypes: {\n                alphanumeric: (row1, row2, name) => {\n                    if (name === 'picture') {\n                        return 0\n                    } else {\n                        return caseInsensitiveSort(row1.values[name], row2.values[name])\n                    }\n                },\n            },\n            disableSortRemove: true,\n        },\n        useSortBy\n    )\n\n    return (\n        <Table size=\"md\" variant=\"simple\" colorScheme=\"blackAlpha\" fontSize=\"1rem\" mt={8} {...getTableProps()}>\n            <Thead>\n                {headerGroups.map((headerGroup) => (\n                    <Tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map((column) => (\n                            <Th\n                                {...column.getHeaderProps(\n                                    column.getSortByToggleProps({ title: `Sort by ${column.Header}` })\n                                )}\n                            >\n                                <Flex align=\"center\" wrap=\"nowrap\" gap={2} w=\"6rem\">\n                                    {column.render('Header')}\n                                    {column.isSorted ? (\n                                        column.isSortedDesc ? (\n                                            <TriangleDownIcon />\n                                        ) : (\n                                            <TriangleUpIcon />\n                                        )\n                                    ) : null}\n                                </Flex>\n                            </Th>\n                        ))}\n                    </Tr>\n                ))}\n            </Thead>\n            <Tbody {...getTableBodyProps()}>\n                {rows.map((row) => {\n                    prepareRow(row)\n                    return (\n                        <Tr {...row.getRowProps()}>\n                            {row.cells.map((cell) => (\n                                <Td {...cell.getCellProps()}>{cell.render('Cell')}</Td>\n                            ))}\n                        </Tr>\n                    )\n                })}\n            </Tbody>\n        </Table>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}