{"ast":null,"code":"var _jsxFileName = \"/Users/manumurillo/Downloads/petsgram_adoption/client/src/components/registration/Singup.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport * as yup from 'yup';\nimport { requiredField, telRegExp } from '../../utils/globals';\nimport FormInputField from '../form/FormInputField';\nimport FormSubmitButtom from '../form/FormSubmitButtom';\nimport FormPasswordField from '../form/FormPasswordField';\nimport { Formik } from 'formik';\nimport { PostReq } from '../../utils/api';\nimport { useToast } from '@chakra-ui/react';\nimport { useAuthContext } from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Singup(_ref) {\n  _s();\n  let {\n    toggleModal\n  } = _ref;\n  const [serverError, setServerError] = useState('');\n  const toast = useToast({\n    title: 'Profile created!',\n    description: 'You can already log in.',\n    status: 'success',\n    duration: 6000,\n    isClosable: true,\n    position: 'top'\n  });\n  const singupSchema = yup.object().shape({\n    firstname: yup.string().required(requiredField).min(3, 'Name must be at least 3 characters.'),\n    lastname: yup.string().min(3, 'Name must be at least 3 characters.'),\n    email: yup.string().required(requiredField),\n    password: yup.string().required(requiredField).min(8, 'Password must be at least 8 characters.'),\n    repeatpassword: yup.string().required(requiredField).oneOf([yup.ref('password')], 'Passwords must match.'),\n    phonenumber: yup.string().matches(telRegExp, 'Invalid phone number.')\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      repeatpassword: '',\n      phonenumber: ''\n    },\n    validationSchema: singupSchema,\n    validateOnChange: false,\n    onSubmit: async (newUser, _ref2) => {\n      let {\n        resetForm\n      } = _ref2;\n      try {\n        setServerError('');\n        const res = await PostReq('/user/signup/', newUser);\n        if (res) {\n          toast();\n          resetForm();\n          toggleModal();\n        }\n        console.log(newUser);\n      } catch (error) {}\n    },\n    children: _ref3 => {\n      let {\n        handleSubmit\n      } = _ref3;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInputField, {\n          req: true,\n          fieldName: \"firstname\",\n          fieldLabel: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInputField, {\n          req: false,\n          fieldName: \"lastname\",\n          fieldLabel: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInputField, {\n          req: true,\n          fieldName: \"email\",\n          fieldLabel: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormPasswordField, {\n          req: true,\n          fieldName: \"password\",\n          fieldLabel: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormPasswordField, {\n          req: true,\n          fieldName: \"repeatpassword\",\n          fieldLabel: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInputField, {\n          req: false,\n          fieldName: \"phonenumber\",\n          fieldLabel: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormSubmitButtom, {\n          buttonLabel: \"Sing Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Singup, \"sO1npbeXEwUbLEAjtsM6R8eRwr8=\", false, function () {\n  return [useToast];\n});\n_c = Singup;\nvar _c;\n$RefreshReg$(_c, \"Singup\");","map":{"version":3,"names":["React","useState","yup","requiredField","telRegExp","FormInputField","FormSubmitButtom","FormPasswordField","Formik","PostReq","useToast","useAuthContext","jsxDEV","_jsxDEV","Singup","_ref","_s","toggleModal","serverError","setServerError","toast","title","description","status","duration","isClosable","position","singupSchema","object","shape","firstname","string","required","min","lastname","email","password","repeatpassword","oneOf","ref","phonenumber","matches","initialValues","validationSchema","validateOnChange","onSubmit","newUser","_ref2","resetForm","res","console","log","error","children","_ref3","handleSubmit","req","fieldName","fieldLabel","fileName","_jsxFileName","lineNumber","columnNumber","buttonLabel","_c","$RefreshReg$"],"sources":["/Users/manumurillo/Downloads/petsgram_adoption/client/src/components/registration/Singup.jsx"],"sourcesContent":["import { React, useState } from 'react'\nimport * as yup from 'yup'\nimport { requiredField, telRegExp } from '../../utils/globals'\nimport FormInputField from '../form/FormInputField'\nimport FormSubmitButtom from '../form/FormSubmitButtom'\nimport FormPasswordField from '../form/FormPasswordField'\nimport { Formik } from 'formik'\nimport { PostReq } from '../../utils/api'\nimport { useToast } from '@chakra-ui/react'\nimport { useAuthContext } from '../../context/AuthContext'\n\nexport default function Singup({ toggleModal }) {\n    const [serverError, setServerError] = useState('')\n\n    const toast = useToast({\n        title: 'Profile created!',\n        description: 'You can already log in.',\n        status: 'success',\n        duration: 6000,\n        isClosable: true,\n        position: 'top',\n    })\n\n    const singupSchema = yup.object().shape({\n        firstname: yup.string().required(requiredField).min(3, 'Name must be at least 3 characters.'),\n        lastname: yup.string().min(3, 'Name must be at least 3 characters.'),\n        email: yup.string().required(requiredField),\n        password: yup.string().required(requiredField).min(8, 'Password must be at least 8 characters.'),\n        repeatpassword: yup\n            .string()\n            .required(requiredField)\n            .oneOf([yup.ref('password')], 'Passwords must match.'),\n        phonenumber: yup.string().matches(telRegExp, 'Invalid phone number.'),\n    })\n\n    return (\n        <Formik\n            initialValues={{\n                firstname: '',\n                lastname: '',\n                email: '',\n                password: '',\n                repeatpassword: '',\n                phonenumber: '',\n            }}\n            validationSchema={singupSchema}\n            validateOnChange={false}\n            onSubmit={async (newUser, { resetForm }) => {\n                try {\n                    setServerError('')\n                    const res = await PostReq('/user/signup/', newUser)\n                    if (res) {\n                        toast()\n                        resetForm()\n                        toggleModal()\n                    }\n\n                    console.log(newUser)\n                } catch (error) {}\n            }}\n        >\n            {({ handleSubmit }) => (\n                <form onSubmit={handleSubmit}>\n                    <FormInputField req={true} fieldName=\"firstname\" fieldLabel=\"First Name\" />\n                    <FormInputField req={false} fieldName=\"lastname\" fieldLabel=\"Last Name\" />\n                    <FormInputField req={true} fieldName=\"email\" fieldLabel=\"Email\" />\n                    <FormPasswordField req={true} fieldName=\"password\" fieldLabel=\"Password\" />\n                    <FormPasswordField req={true} fieldName=\"repeatpassword\" fieldLabel=\"Confirm Password\" />\n                    <FormInputField req={false} fieldName=\"phonenumber\" fieldLabel=\"Phone Number\" />\n                    <FormSubmitButtom buttonLabel=\"Sing Up\" />\n                </form>\n            )}\n        </Formik>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}