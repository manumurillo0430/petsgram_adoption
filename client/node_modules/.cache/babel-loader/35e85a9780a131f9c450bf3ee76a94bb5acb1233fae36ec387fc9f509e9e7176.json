{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.interpolateAs = interpolateAs;\nvar _routeMatcher = require(\"./route-matcher\");\nvar _routeRegex = require(\"./route-regex\");\nfunction interpolateAs(route, asPathname, query) {\n  var interpolatedRoute = '';\n  var dynamicRegex = (0, _routeRegex).getRouteRegex(route);\n  var dynamicGroups = dynamicRegex.groups;\n  var dynamicMatches =\n  // Try to match the dynamic route against the asPath\n  (asPathname !== route ? (0, _routeMatcher).getRouteMatcher(dynamicRegex)(asPathname) : '') ||\n  // Fall back to reading the values from the href\n  // TODO: should this take priority; also need to change in the router.\n  query;\n  interpolatedRoute = route;\n  var params = Object.keys(dynamicGroups);\n  if (!params.every(function (param) {\n    var value = dynamicMatches[param] || '';\n    var _dynamicGroups$param = dynamicGroups[param],\n      repeat = _dynamicGroups$param.repeat,\n      optional = _dynamicGroups$param.optional;\n    // support single-level catch-all\n    // TODO: more robust handling for user-error (passing `/`)\n    var replaced = \"[\".concat(repeat ? '...' : '').concat(param, \"]\");\n    if (optional) {\n      replaced = \"\".concat(!value ? '/' : '', \"[\").concat(replaced, \"]\");\n    }\n    if (repeat && !Array.isArray(value)) value = [value];\n    return (optional || param in dynamicMatches) && (\n    // Interpolate group into data URL if present\n    interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map(\n    // these values should be fully encoded instead of just\n    // path delimiter escaped since they are being inserted\n    // into the URL and we expect URL encoded segments\n    // when parsing dynamic route params\n    function (segment) {\n      return encodeURIComponent(segment);\n    }).join('/') : encodeURIComponent(value)) || '/');\n  })) {\n    interpolatedRoute = '' // did not satisfy all requirements\n    ;\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n  }\n\n  return {\n    params: params,\n    result: interpolatedRoute\n  };\n}","map":{"version":3,"names":["interpolateAs","_routeMatcher","require","_routeRegex","route","asPathname","query","interpolatedRoute","dynamicRegex","getRouteRegex","dynamicGroups","groups","dynamicMatches","getRouteMatcher","params","Object","keys","every","param","value","_dynamicGroups$param","repeat","optional","replaced","concat","Array","isArray","replace","map","segment","encodeURIComponent","join","result"],"sources":["../../../../../src/shared/lib/router/utils/interpolate-as.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;;QAKgBA,aAAa,GAAbA,aAAa;AAHG,IAAAC,aAAiB,GAAAC,OAAA,CAAjB,iBAAiB;AACnB,IAAAC,WAAe,GAAAD,OAAA,CAAf,eAAe;AAEtC,SAASF,aAAaA,CAC3BI,KAAa,EACbC,UAAkB,EAClBC,KAAqB,EACrB;EACA,IAAIC,iBAAiB,GAAG,EAAE;EAE1B,IAAMC,YAAY,GAAG,IAAAL,WAAa,EAAOM,aAAP,CAACL,KAAK,CAAC;EACzC,IAAMM,aAAa,GAAGF,YAAY,CAACG,MAAM;EACzC,IAAMC,cAAc;EAClB;EACA,CAACP,UAAU,KAAKD,KAAK,GAAG,IAAAH,aAAe,EAAcY,eAAd,CAACL,YAAY,CAAC,CAACH,UAAU,CAAC,GAAG,EAAE;EACtE;EACA;EACAC,KAAK;EAEPC,iBAAiB,GAAGH,KAAK;EACzB,IAAMU,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACN,aAAa,CAAC;EAEzC,IACE,CAACI,MAAM,CAACG,KAAK,CAAC,UAACC,KAAK,EAAK;IACvB,IAAIC,KAAK,GAAGP,cAAc,CAACM,KAAK,CAAC,IAAI,EAAE;IACvC,IAAAE,oBAAA,GAA6BV,aAAa,CAACQ,KAAK,CAAC;MAAzCG,MAAM,GAAAD,oBAAA,CAANC,MAAM;MAAEC,QAAQ,GAAAF,oBAAA,CAARE,QAAQ;IAExB;IACA;IACA,IAAIC,QAAQ,OAAAC,MAAA,CAAOH,MAAM,GAAG,KAAK,GAAG,EAAE,EAAAG,MAAA,CAAGN,KAAK,MAAG;IACjD,IAAII,QAAQ,EAAE;MACZC,QAAQ,MAAAC,MAAA,CAAM,CAACL,KAAK,GAAG,GAAG,GAAG,EAAE,OAAAK,MAAA,CAAID,QAAQ,MAAG;;IAEhD,IAAIF,MAAM,IAAI,CAACI,KAAK,CAACC,OAAO,CAACP,KAAK,CAAC,EAAEA,KAAK,GAAG,CAACA,KAAK,CAAC;IAEpD,OACE,CAACG,QAAQ,IAAIJ,KAAK,IAAIN,cAAc;IACpC;IACCL,iBAAiB,GAChBA,iBAAiB,CAAEoB,OAAO,CACxBJ,QAAQ,EACRF,MAAM,GACFF,KAAM,CACHS,GAAG;IACF;IACA;IACA;IACA;IACA,UAACC,OAAO;MAAA,OAAKC,kBAAkB,CAACD,OAAO,CAAC;IAAA,EACzC,CACAE,IAAI,CAAC,GAAG,CAAC,GACZD,kBAAkB,CAACX,KAAK,CAAW,CACxC,IAAI,GAAG,CAAC;GAEd,CAAC,EACF;IACAZ,iBAAiB,GAAG,EAAE,CAAC;IAAA;IAEvB;IACA;;;EAEF,OAAO;IACLO,MAAM,EAANA,MAAM;IACNkB,MAAM,EAAEzB;GACT"},"metadata":{},"sourceType":"script","externalDependencies":[]}